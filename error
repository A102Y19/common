def handle_notepad_if_opened(timeout=60):
    print("🔍 Checking if Notepad is open after ENTER...")
    notepad_window = None
    start_time = time.time()

    while notepad_window is None and (time.time() - start_time < timeout):
        try:
            windows = Desktop(backend="uia").windows()
            for win in windows:
                if "Notepad" in win.window_text():
                    notepad_window = win
                    print("✅ Notepad window found.")
                    break
        except Exception as e:
            print(f"Error finding Notepad: {e}")
        time.sleep(5)

    if notepad_window is None:
        print("✅ No Notepad opened.")
        return

    try:
        time.sleep(2)  # Short wait for Notepad to fully load

        # Try to access the known auto_id for Notepad's edit box
        try:
            edit_box = notepad_window.child_window(auto_id="15", control_type="Edit")
            text = edit_box.window_text()
        except Exception:
            # Fallback to descendants
            edit_boxes = notepad_window.descendants(control_type="Edit")
            if not edit_boxes:
                print("⚠️ No editable text area found in Notepad.")
                notepad_window.close()
                print("✅ Closed Notepad.")
                return
            edit_box = edit_boxes[0]
            text = edit_box.window_text()

        lines = text.split("\n")
        last_line = lines[-1] if lines else "No error message found"
        print(f"📝 Last line in Notepad: {last_line}")

        notepad_window.close()
        print("✅ Closed Notepad.")
    except Exception as e:
        print(f"❌ Error reading or closing Notepad: {e}")
