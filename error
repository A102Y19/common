import os
import pyautogui
import pyperclip
import subprocess

def handle_notepad_if_opened(timeout=60):
    print("🔍 Checking if Notepad is open after ENTER...")
    notepad_window = None
    start_time = time.time()

    while notepad_window is None and (time.time() - start_time < timeout):
        try:
            windows = Desktop(backend="uia").windows()
            for win in windows:
                if "Notepad" in win.window_text():
                    notepad_window = win
                    print("✅ Notepad window found.")
                    break
        except Exception as e:
            print(f"Error finding Notepad: {e}")
        time.sleep(5)

    if notepad_window is None:
        print("✅ No Notepad opened.")
        return

    # Bring Notepad to front and copy text
    try:
        notepad_window.set_focus()
        time.sleep(1)
        pyautogui.hotkey("ctrl", "a")
        time.sleep(0.5)
        pyautogui.hotkey("ctrl", "c")
        time.sleep(1)
        copied_text = pyperclip.paste()

        # Open a new Notepad
        subprocess.Popen(["notepad.exe"])
        time.sleep(2)
        pyautogui.hotkey("ctrl", "v")
        time.sleep(1)

        # Save file in C:\log as failed_logs.txt
        os.makedirs(r"C:\log", exist_ok=True)
        pyautogui.hotkey("ctrl", "s")
        time.sleep(1)
        pyautogui.write(r"C:\log\failed_logs.txt")
        pyautogui.press("enter")
        time.sleep(1)

        print("✅ Logs copied and saved to C:\\log\\failed_logs.txt")

        # Close original Notepad
        notepad_window.close()
        print("✅ Closed original Notepad.")

    except Exception as e:
        print(f"❌ Error during Notepad copy/save: {e}")
