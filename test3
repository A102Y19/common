import os
import sys
import time
import logging
import subprocess
import pyautogui
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from pywinauto import Application, findwindows
from pywinauto.keyboard import send_keys

# Get password from environment variable
password = os.getenv("OMP_PASSWORD")
if not password:
    print("Error: Environment variable 'OMP_PASSWORD' not found!")
    sys.exit(1)

# Define log file path
log_filename = "C:/DeployAgent/log_" + time.strftime("%Y-%m-%d_%H-%M-%S") + ".txt"

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler(log_filename),
        logging.StreamHandler()
    ]
)

# Configure Edge WebDriver
edge_options = webdriver.EdgeOptions()
edge_options.add_argument("--log-level=3")
edge_options.add_experimental_option("excludeSwitches", ["enable-logging"])

# Initialize WebDriver
driver = None

try:
    logging.info("Starting Edge WebDriver...")
    driver = webdriver.Edge(options=edge_options)
    driver.get("https://rdwatest.na.jnj.com/RDWeb/Pages/en-US/login.aspx")

    wait = WebDriverWait(driver, 10)

    try:
        username_field = wait.until(EC.presence_of_element_located((By.ID, "DomainUserName")))
        password_field = wait.until(EC.presence_of_element_located((By.ID, "UserPass")))

        username_field.send_keys("NA\\gyellap1")
        password_field.send_keys(password)
    except TimeoutException:
        logging.error("Username or password field not found!")
        sys.exit(1)

    try:
        sign_in_button = wait.until(EC.element_to_be_clickable((By.ID, "btnSignIn")))
        sign_in_button.click()
    except TimeoutException:
        logging.error("Sign In button not found!")
        sys.exit(1)

    time.sleep(5)

    try:
        instance_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), 'OMP LAB INSTANCE')]")))
        instance_button.click()
    except TimeoutException:
        logging.error("OMP LAB INSTANCE button not found!")
        sys.exit(1)

    time.sleep(5)
    download_path = os.path.join(os.path.expanduser("~"), "Downloads")
    rdp_file = None

    for file in os.listdir(download_path):
        if file.endswith(".rdp"):
            rdp_file = os.path.join(download_path, file)
            break

    if not rdp_file:
        logging.error("RDP file not found in downloads!")
        sys.exit(1)

    logging.info(f"RDP file found: {rdp_file}")
    time.sleep(10)

    try:
        app = Application().connect(title_re=".*Remote Desktop Connection.*", timeout=10)
        password_window = app.window(title_re=".*Remote Desktop Connection.*")
        time.sleep(20)

        if password_window.exists():
            password_window.Edit.set_text(password)
            password_window.OK.click()
            time.sleep(2)
    except Exception:
        logging.info("No password prompt detected.")
        pyautogui.press("enter")
        time.sleep(10)

    logging.info("Waiting for OMP Plus application to launch...")
    omp_app = None

    for attempt in range(5):
        try:
            windows = findwindows.find_windows(title_re=".*OMP Plus.*", backend='win32')
            if windows:
                omp_app = Application().connect(handle=windows[0])
                logging.info("OMP Plus application detected.")
                break
        except Exception as e:
            logging.info(f"Attempt {attempt + 1}: OMP Plus is Not Running - {e}")

        time.sleep(5)

    if not omp_app:
        logging.error("OMP Plus application did not launch within the timeout!")
        sys.exit(1)

except Exception as e:
    logging.error(f"Unexpected error: {e}")
finally:
    if driver:
        driver.quit()
