import os
import sys
import time
import logging
import subprocess
import pyautogui
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from pywinauto import Application, findwindows
from pywinauto.keyboard import send_keys

# Get password from environment variable
password = os.getenv("OMP_pass")
if not password:
    print("Error: Environment variable 'OMP_pass' not found!")
    sys.exit(1)

# Define log file path (same as batch file)
log_filename = "C:/DeployAgent/log_" + time.strftime("%Y-%m-%d_%H-%M-%S") + ".txt"

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler(log_filename),  # Log to file
        logging.StreamHandler()  # Log to console
    ]
)

# Configure logging (Suppress WebDriver logs)
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

# Edge WebDriver options to suppress logs
edge_options = webdriver.EdgeOptions()
edge_options.add_argument("--log-level=3")  # Suppress most logs
edge_options.add_experimental_option("excludeSwitches", ["enable-logging"])  # Remove console logs

# Initialize WebDriver
driver = None  

try:
    logging.info("Starting Edge WebDriver...")
    driver = webdriver.Edge(options=edge_options)

    # Step 1: Open the URL
    url = "https://rdwatest.na.jnj.com/RDWeb/Pages/en-US/login.aspx"
    logging.info(f"Opening URL: {url}")
    driver.get(url)

    # Step 2: Wait for Username & Password Fields
    wait = WebDriverWait(driver, 10)

    try:
        logging.info("Finding username and password fields...")
        username_field = wait.until(EC.presence_of_element_located((By.ID, "DomainUserName")))
        password_field = wait.until(EC.presence_of_element_located((By.ID, "UserPass")))

        logging.info("Entering credentials...")
        username_field.send_keys("NA\\gyellap1")
        password_field.send_keys(password)
    except TimeoutException:
        logging.error("Username or password field not found!")
        exit(1)

    # Step 3: Click the Sign In Button
    try:
        logging.info("Waiting for Sign In button...")
        sign_in_button = wait.until(EC.element_to_be_clickable((By.ID, "btnSignIn")))
        logging.info("Clicking the Sign In button...")
        sign_in_button.click()
    except TimeoutException:
        logging.error("Sign In button not found!")
        exit(1)

    # Step 4: Wait for Login Confirmation
    time.sleep(5)
    logging.info("Login successful.")

    # Step 5: Click on "OMP LAB INSTANCE"
    try:
        logging.info("Searching for OMP LAB INSTANCE button...")
        instance_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), 'OMP LAB INSTANCE')]") ))
        logging.info("Clicking OMP LAB INSTANCE button...")
        instance_button.click()
    except TimeoutException:
        logging.error("OMP LAB INSTANCE button not found!")
        exit(1)

    # Step 6: Wait for the .rdp file to download
    time.sleep(5)
    download_path = os.path.join(os.path.expanduser("~"), "Downloads")
    rdp_file = None

    # Find the latest downloaded .rdp file
    for file in os.listdir(download_path):
        if file.endswith(".rdp"):
            rdp_file = os.path.join(download_path, file)
            break

    if not rdp_file:
        logging.error("RDP file not found in downloads!")
        exit(1)

    logging.info(f"RDP file found: {rdp_file}")

    # Step 7: Run the .rdp file
    subprocess.Popen(rdp_file, shell=True)
    time.sleep(10)  # Wait for the RDP window to open

    # Step 8: Handle Password Prompt
    logging.info("Checking for password prompt...")

    try:
        send_keys(password)  # Type the password
        time.sleep(2)
        send_keys("{ENTER}")  # Press Enter
        logging.info("Password entered, waiting for session...")
        time.sleep(10)  # Wait for session to initialize
        send_keys("{ENTER}")  # Press Enter again if needed
        logging.info("Entered second ENTER, waiting for OMP to launch...")
    except Exception as e:
        logging.error(f"Error entering password: {e}")

    # Step 9: Wait for OMP Plus Application to Launch
    logging.info("Waiting for OMP Plus application to launch...")

finally:
    # Terminate the RDP connection (uncomment to use)
   # terminate_rdp_connection()

    # Quit the WebDriver
    if driver:
        #driver.quit()
