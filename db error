from pywinauto import Desktop
import time

def wait_for_update_installer_and_information():
    print("üîç Searching inside OMP for 'Update Installer'...")

    omp_window = None
    while omp_window is None:
        try:
            windows = Desktop(backend="uia").windows()
            for win in windows:
                if "OMP Data Change Manager" in win.window_text():
                    omp_window = win
                    print("‚úÖ OMP Main window found.")
                    break
        except Exception as e:
            print(f"Error finding main window: {e}")
        time.sleep(5)

    while True:
        all_panes = omp_window.descendants(control_type="Pane")
        for pane in all_panes:
            if "Update Installer" in pane.window_text():
                print(f"‚úÖ Found 'Update Installer' pane: {pane.window_text()}")
                break
        else:
            time.sleep(10)
            continue
        break

    print("üïí Waiting for 'Information' pane every 60 seconds...")
    while True:
        all_panes = omp_window.descendants(control_type="Pane")
        for pane in all_panes:
            if "Information" in pane.window_text():
                print(f"‚úÖ Found 'Information' pane: {pane.window_text()}")

                # üìã Try reading content from multiple control types
                try:
                    content_found = False
                    for control_type in ["Text", "Edit", "Document"]:
                        for t in pane.descendants(control_type=control_type):
                            text = t.window_text().strip()
                            if text:
                                print(f"üìã [{control_type}] {text}")
                                content_found = True
                    if not content_found:
                        print("‚ö†Ô∏è No readable text found in expected control types.")
                except Exception as e:
                    print(f"‚ö†Ô∏è Couldn't read text: {e}")

                # üñ±Ô∏è Try clicking OK button using flexible matching
                try:
                    buttons = pane.descendants(control_type="Button")
                    clicked = False
                    for btn in buttons:
                        if "ok" in btn.window_text().lower():
                            btn.click()
                            print(f"‚úÖ Clicked OK button: {btn.window_text()}")
                            clicked = True
                            break
                    if not clicked:
                        print("‚ö†Ô∏è OK button not found.")
                except Exception as e:
                    print(f"‚ö†Ô∏è Couldn't click OK: {e}")
                return
        time.sleep(60)
