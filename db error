from pywinauto import Desktop
import time

def wait_for_update_installer_and_information():
    print("üîç Searching inside OMP for 'Update Installer'...")

    omp_window = None
    while omp_window is None:
        try:
            windows = Desktop(backend="uia").windows()
            for win in windows:
                if "OMP Data Change Manager" in win.window_text():
                    omp_window = win
                    print("‚úÖ OMP Main window found.")
                    break
        except Exception as e:
            print(f"Error finding main window: {e}")
        time.sleep(5)

    while True:
        try:
            all_panes = omp_window.descendants(control_type="Pane")
            for pane in all_panes:
                if "Update Installer" in pane.window_text():
                    print(f"‚úÖ Found 'Update Installer' pane: {pane.window_text()}")
                    break
            else:
                time.sleep(10)
                continue
            break
        except Exception as e:
            print(f"Error checking panes: {e}")
            time.sleep(5)

    print("üïí Waiting for 'Information' pane every 60 seconds...")
    while True:
        try:
            all_panes = omp_window.descendants(control_type="Pane")
            for pane in all_panes:
                if "Information" in pane.window_text():
                    print(f"‚úÖ Found 'Information' pane: {pane.window_text()}")

                    # Read all Text controls inside the Information pane
                    try:
                        texts = pane.descendants(control_type="Text")
                        if texts:
                            print("üìã Popup Text Content:")
                            for t in texts:
                                print(f" - {t.window_text()}")
                        else:
                            print("‚ö†Ô∏è No text elements found.")
                    except Exception as e:
                        print(f"‚ö†Ô∏è Couldn't read text: {e}")

                    # Try finding the OK button from descendants
                    try:
                        ok_button = pane.child_window(title="OK", control_type="Button")
                        ok_button.click()
                        print("‚úÖ Clicked OK.")
                    except:
                        try:
                            all_buttons = pane.descendants(control_type="Button")
                            for b in all_buttons:
                                if "OK" in b.window_text():
                                    b.click()
                                    print("‚úÖ Clicked fallback OK.")
                                    break
                            else:
                                print("‚ö†Ô∏è OK button not found.")
                        except Exception as e:
                            print(f"‚ö†Ô∏è Couldn't click OK: {e}")
                    return
        except Exception as e:
            print(f"Error during Information pane check: {e}")
        time.sleep(60)
