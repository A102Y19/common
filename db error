def wait_for_update_installer_and_information():
    logging.info("Searching inside OMP for 'Update Installer'...")

    # Step 1: Find OMP Main Window
    omp_window = None
    while omp_window is None:
        try:
            windows = Desktop(backend="uia").windows()
            for win in windows:
                logging.info(f"Window found: {win.window_text()}")
                if "OMP Data Change Manager" in win.window_text():
                    omp_window = win
                    logging.info("OMP Main window found.")
                    break
        except Exception as e:
            logging.error(f"Error finding main window: {e}")
        time.sleep(5)

    # Step 2: Wait for "Update Installer" pane
    while True:
        found_installer = False
        try:
            all_panes = omp_window.descendants()
            for pane in all_panes:
                ctrl_type = pane.element_info.control_type
                auto_id = pane.element_info.automation_id
                name = pane.element_info.name
                text = pane.window_text()
                if "Update Installer" in text or "Update Installer" in name:
                    logging.info(f"Found 'Update Installer' - Name: {name}, Text: {text}")
                    found_installer = True
                    break
        except Exception as e:
            logging.error(f"Failed to get pane info: {e}")

        if found_installer:
            break
        else:
            logging.info("Waiting 10 seconds before checking 'Update Installer' again...")
            time.sleep(10)

    # Step 3: Wait for "Information" popup and Notepad
    logging.info("Waiting for 'Information' popup every 60 seconds...")
    while True:
        try:
            all_panes = omp_window.descendants()
            for pane in all_panes:
                name = pane.element_info.name
                text = pane.window_text()
                if "Information" in name or "Information" in text:
                    logging.info(f"Found 'Information' pane: {text}")
                    logging.info("ENTER sent to close popup. Checking for Notepad...")

                    # Wait for Notepad window (up to 60 seconds)
                    notepad_window = None
                    start_time = time.time()
                    timeout = 60

                    while notepad_window is None and (time.time() - start_time < timeout):
                        try:
                            windows = Desktop(backend="uia").windows()
                            for win in windows:
                                if "Notepad" in win.window_text():
                                    notepad_window = win
                                    logging.info("Notepad window found.")
                                    handle_notepad_if_opened()
                                    return
                        except Exception as e:
                            logging.error(f"Error checking Notepad: {e}")
                        time.sleep(5)

                    logging.info("Installation completed successfully. No Notepad found.")
                    return
        except Exception as e:
            logging.error(f"Error while checking 'Information' popup: {e}")

        time.sleep(60)
