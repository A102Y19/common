import subprocess
import logging
import socket

# Setup logging
logging.basicConfig(level=logging.INFO)

def get_current_hostname():
    """ Get the current machine's hostname """
    hostname = socket.gethostname()
    logging.info(f"Current host is {hostname}")
    return hostname

def execute_scheduled_task(server, task_name, user, password):
    """ Execute scheduled task on remote server """
    try:
        logging.info(f"Executing: schtasks.exe /run /S {server} /U {user} /P {password} /tn {task_name}")
        result = subprocess.run(
            ["schtasks.exe", "/run", "/S", server, "/U", user, "/P", password, "/tn", task_name],
            capture_output=True, text=True
        )
        if result.returncode == 0:
            logging.info(f"SUCCESS: Attempted to run the scheduled task \"{task_name}\" on {server}.")
        else:
            logging.error(f"Error: {result.stderr}")
    except Exception as e:
        logging.error(f"Error executing scheduled task on {server}: {str(e)}")

def execute_local_task(task_name):
    """ Execute a local task without credentials """
    try:
        logging.info(f"Executing: schtasks.exe /run /tn {task_name}")
        result = subprocess.run(
            ["schtasks.exe", "/run", "/tn", task_name],
            capture_output=True, text=True
        )
        if result.returncode == 0:
            logging.info(f"SUCCESS: Attempted to run the scheduled task \"{task_name}\" locally.")
        else:
            logging.error(f"Error: {result.stderr}")
    except Exception as e:
        logging.error(f"Error executing local task {task_name}: {str(e)}")

def check_task_on_current_host():
    """ Main function to execute tasks based on hostname """
    current_host = get_current_hostname()

    # Define your server task names and credentials
    user = "SA-ITS-APSOMINT-LAB"
    password = "Jnjtestuser_1"
    
    # Task names to run
    tasks = [
        "OMPDISPATCHER\\OMP_JNJ_MD_OMEGA_LAB",
        "OMP Dispatcher\\OMP_JNJ_MD_OMEGA_LAB_DSPAgent"
    ]

    # For local execution, run tasks without /S
    if current_host == "AWSDMJNVAW0002":
        logging.info("Running tasks locally as current machine is AWSDMJNVAW0002")
        for task in tasks:
            execute_local_task(task)
    else:
        # For remote execution, use /S and full credentials
        remote_servers = ["AWSDMJNVAW0001", "AWSDMJNVAW000D", "AWSDMJNVAW000E", "AWSDMJNVAW000H", "AWSDMJNVAW000M"]
        for server in remote_servers:
            for task in tasks:
                execute_scheduled_task(server, task, user, password)

    # Example of web request task (keeping it simple for now)
    url = "http://awsdmjnvaw0001:8095/OMPDispatcher?wsdl"
    try:
        result = subprocess.run(
            ["curl", "-I", url], capture_output=True, text=True
        )
        if result.returncode == 0:
            logging.info(f"Web request to {url} successful with status: {result.stdout}")
        else:
            logging.error(f"Error with web request to {url}: {result.stderr}")
    except Exception as e:
        logging.error(f"Error with web request: {str(e)}")

if __name__ == "__main__":
    check_task_on_current_host()
